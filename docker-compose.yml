version: '3.8'

services:
  erpnext-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: erpnext-mcp-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - MAX_MEMORY_SIZE=4096
      - MAX_CONCURRENT_CONNECTIONS=100
      - REQUEST_TIMEOUT=30000

      # ERPNext Configuration (Required)
      - ERPNEXT_BASE_URL=${ERPNEXT_URL}
      - ERPNEXT_API_KEY=${ERPNEXT_API_KEY}
      - ERPNEXT_API_SECRET=${ERPNEXT_API_SECRET}
      - ERPNEXT_TIMEOUT=30000
      - ERPNEXT_MAX_RETRIES=3
      - ERPNEXT_RETRY_DELAY=1000

      # Redis Configuration (Optional)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_TTL=3600
      - ENABLE_CACHE=true
      - CACHE_TTL=300
      - MAX_CACHE_SIZE=1000

      # Security Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=24h
      - API_RATE_LIMIT=100
      - API_RATE_LIMIT_WINDOW=900000
      - ENABLE_CORS=true
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}

      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=/app/logs/erpnext-mcp-server.log
      - LOG_MAX_SIZE=10m
      - LOG_MAX_FILES=5
      - ENABLE_REQUEST_LOGGING=true
      - HEALTH_CHECK_ENABLED=true
      - HEALTH_CHECK_INTERVAL=30000

      # Performance Configuration
      - ENABLE_CONNECTION_POOLING=true
      - MAX_CONNECTIONS=10
      - MIN_CONNECTIONS=2

      # Business Domain Configuration
      - ENABLE_SALES_DOMAIN=true
      - ENABLE_PURCHASE_DOMAIN=true
      - ENABLE_FINANCE_DOMAIN=true
      - ENABLE_HR_DOMAIN=true

      # Development/Debug (DISABLE IN PRODUCTION)
      - ENABLE_DEBUG_LOGGING=false
      - ENABLE_DETAILED_ERRORS=false
      - ENABLE_PERFORMANCE_TRACING=false
      - ENABLE_DEV_MODE=false
      - ENABLE_MOCK_RESPONSES=false

    ports:
      - "3000:3000"

    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
      - /etc/localtime:/etc/localtime:ro

    depends_on:
      redis:
        condition: service_healthy

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

    networks:
      - erpnext-mcp

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'

    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  redis:
    image: redis:7-alpine
    container_name: erpnext-mcp-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
      - /etc/localtime:/etc/localtime:ro

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    networks:
      - erpnext-mcp

    # Security settings
    security_opt:
      - no-new-privileges:true
    user: "redis"
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Optional: Monitoring service (uncomment to enable)
  # monitoring:
  #   image: grafana/grafana:latest
  #   container_name: erpnext-mcp-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
  #     - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
  #   depends_on:
  #     - erpnext-mcp-server
  #   networks:
  #     - erpnext-mcp

networks:
  erpnext-mcp:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  redis_data:
    driver: local
  # grafana_data:
  #   driver: local